---
import { SkillsCarousel } from '@/components/shared/SkillsCarousel'

const profile = {
	foto: 'assets/img/user-sidebar-thumb.png',
	nombre: 'Brown Reddick',
	role: ['Desarrollador web', 'Fotógrafos', 'Diseñador web'],
	residencia: 'Canada',
	ciudad: 'Toronto',
	experiencia: '10 años',
	habilidades: [
		{
			id: 1,
			nombre: 'HTML',
			porcentaje: 90
		},
		{
			id: 2,
			nombre: 'CSS',
			porcentaje: 80
		},
		{
			id: 3,
			nombre: 'JS',
			porcentaje: 80
		},
		{
			id: 4,
			nombre: 'React',
			porcentaje: 90
		},
		{
			id: 5,
			nombre: 'Next js',
			porcentaje: 90
		},
		{
			id: 6,
			nombre: 'Astro js',
			porcentaje: 70
		}
	]
}
---

<style>
	.cd-words-wrapper {
		display: inline-block; /* Para que el contenedor se ajuste al contenido */
		border-right: 1px solid #00bc91; /* Solo para visualización */
		transition: width 0.5s ease; /* Suaviza el cambio de ancho */
		overflow: hidden; /* Oculta cualquier contenido que exceda el ancho del contenedor */
	}
	b {
		display: none; /* Inicialmente oculto */
		white-space: nowrap; /* Evita que el texto se divida en varias líneas */
	}
	.is-visible {
		display: inline; /* Mostrar sólo la palabra visible */
	}
</style>
<!-- Sidebar Profile Start -->
<aside>
	<div
		class="mx-auto w-full max-w-[22.75rem] pt-20 xl:sticky xl:top-6 xl:mx-0 xl:max-w-[initial] xl:pt-0"
	>
		<div
			class="mb-3 overflow-hidden rounded-2xl bg-white p-3 [clip-path:url(#my-clip-path)] dark:bg-night-black"
		>
			<div class="mx-4 mt-12 text-center lg:mx-6">
				<a
					class="mx-auto mb-2.5 block h-36 w-36 overflow-hidden rounded-full border-[6px] border-platinum dark:border-[#2f2f2f]"
					href="/"
				>
					<img
						src={`/${profile.foto}`}
						class="hidden h-full w-full rounded-full dark:block"
						alt={profile.nombre}
					/>
					<!--Image for Dark Version -->
					<img
						src={`/${profile.foto}`}
						class="h-full w-full rounded-full dark:hidden"
						alt={profile.nombre}
					/>
					<!--Image for Light Version -->
				</a>
				<h6 class="mb-1 text-lg font-semibold text-black dark:text-white">
					{profile.nombre}
				</h6>
				<div class="cd-words-wrapper text-sm text-theme-color">
					{
						profile.role.map((rol) => {
							return <b class="font-normal">{rol}</b>
						})
					}
				</div>
			</div>
			<div class="mx-4 my-7 border-t border-platinum pt-6 dark:border-metal-black md:mx-7 lg:mx-6">
				<ul class="space-y-3">
					<li class="flex text-sm">
						<span class="flex-1 font-medium text-black dark:text-white">Residencia:</span>
						<span>{profile.residencia}</span>
					</li>
					<li class="flex text-sm">
						<span class="flex-1 font-medium text-black dark:text-white">Ciudad:</span>
						<span>{profile.ciudad}</span>
					</li>
					<li class="flex text-sm">
						<span class="flex-1 font-medium text-black dark:text-white">Experiencia:</span>
						<span>{profile.experiencia}</span>
					</li>
				</ul>
			</div>
			<div class="rounded-2xl bg-flash-white px-4 py-5 dark:bg-metal-black md:px-8 lg:px-6 lg:py-6">
				<div class="text-sm font-medium text-black dark:text-white">Habilidades</div>
				<div class="my-4 flex items-center justify-between space-x-4">
					<SkillsCarousel type="habilidades-simple" skills={profile.habilidades} client:load />
				</div>
				<div class="mt-6">
					<a
						href="mycv.pdf"
						download
						target="_blank"
						class="flex items-center justify-center gap-2 rounded-full border border-theme-color bg-theme-color py-3.5 text-center text-[15px] text-sm font-semibold text-white transition duration-300 hover:border-theme-hover-color hover:bg-theme-hover-color"
					>
						DOWNLOAD CV

						<span class="animate-bounce">
							<svg
								width="18"
								height="18"
								viewBox="0 0 15 16"
								fill="none"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									d="M12.0724 4.92378C12.0726 4.91034 12.0726 4.89691 12.0726 4.88368C12.0726 2.53968 10.1657 0.632812 7.82171 0.632812C5.47771 0.632812 3.57084 2.53968 3.57084 4.88368C3.57084 4.89691 3.57084 4.91055 3.57104 4.92378C1.95417 5.0992 0.691406 6.47267 0.691406 8.13554C0.691406 9.91704 2.14059 11.3662 3.92209 11.3662H4.33138C4.55606 11.3662 4.7384 11.1839 4.7384 10.9592C4.7384 10.7345 4.55606 10.5522 4.33138 10.5522H3.92209C2.58952 10.5522 1.50544 9.46811 1.50544 8.13554C1.50544 6.80297 2.58952 5.71888 3.92209 5.71888H4.00309C4.11868 5.71888 4.22898 5.66963 4.30611 5.58355C4.38345 5.49726 4.42028 5.38248 4.40766 5.2673C4.3924 5.12769 4.38487 5.00233 4.38487 4.88348C4.38487 2.98842 5.92665 1.44664 7.82171 1.44664C9.71678 1.44664 11.2586 2.98842 11.2586 4.88348C11.2586 5.00233 11.251 5.12769 11.2358 5.2673C11.2231 5.38228 11.26 5.49726 11.3373 5.58355C11.4144 5.66963 11.5247 5.71888 11.6403 5.71888H11.7217C13.0541 5.71888 14.138 6.80297 14.138 8.13554C14.138 9.46811 13.0541 10.5522 11.7217 10.5522H11.288C11.0634 10.5522 10.881 10.7345 10.881 10.9592C10.881 11.1839 11.0634 11.3662 11.288 11.3662H11.7217C13.5028 11.3662 14.952 9.91704 14.952 8.13554C14.952 6.47247 13.6892 5.099 12.0724 4.92378Z"
									fill="white"></path>
								<path
									d="M6.26314 11.942C6.0877 12.1876 6.26327 12.5288 6.5651 12.5288H8.81272L7.3764 14.5396C7.25728 14.7064 7.29591 14.9382 7.46268 15.0573C7.62945 15.1764 7.86122 15.1378 7.98034 14.971L9.83579 12.3734C10.0112 12.1278 9.83566 11.7866 9.53382 11.7866H7.2862L8.72252 9.77578C8.84164 9.609 8.80302 9.37724 8.63624 9.25811C8.46947 9.13899 8.23771 9.17762 8.11858 9.34439L6.26314 11.942Z"
									fill="white"></path>
							</svg>
						</span>
					</a>
				</div>
			</div>
			<svg class="absolute h-0 w-0">
				<clipPath
					id="my-clip-path"
					clipPathUnits="objectBoundingBox"
					stroke="white"
					stroke-width="2"
				>
					<path
						d="M0.001,0.031 C0.001,0.014,0.026,0.001,0.055,0.001 H0.492 C0.506,0.001,0.52,0.004,0.53,0.009 L0.61,0.052 C0.62,0.057,0.634,0.06,0.649,0.06 H0.947 C0.977,0.06,1,0.074,1,0.091 V0.971 C1,0.987,0.977,1,0.947,1 H0.055 C0.026,1,0.001,0.987,0.001,0.971 V0.031"
					></path>
				</clipPath>
			</svg>
		</div>
	</div>
</aside>
<script>
	const wordsWrapper = document.querySelector('.cd-words-wrapper') as HTMLElement
	const words = wordsWrapper.querySelectorAll('b')
	let index = 0

	function expandWidth(duration: number) {
		const targetWidth = words[index].offsetWidth
		let currentWidth = 0
		const frameRate = 60 // Estimación del número de cuadros por segundo
		const totalFrames = (duration / 1000) * frameRate // Total de cuadros durante la duración
		const increment = targetWidth / totalFrames // Incremento por cuadro

		function step() {
			if (currentWidth < targetWidth) {
				currentWidth += increment
				wordsWrapper.style.width = `${Math.min(currentWidth, targetWidth) + 10}px`
				requestAnimationFrame(step)
			} else {
				setTimeout(() => {
					contractWidth(duration)
				}, 2000) // Usa la misma duración para la contracción
			}
		}
		requestAnimationFrame(step)
	}

	function contractWidth(duration: number) {
		const currentWidthStart = wordsWrapper.offsetWidth
		let currentWidth = currentWidthStart
		const frameRate = 60 // Estimación del número de cuadros por segundo
		const totalFrames = (duration / 1000) * frameRate // Total de cuadros durante la duración
		const decrement = currentWidthStart / totalFrames // Decremento por cuadro

		function step() {
			if (currentWidth > 0) {
				currentWidth -= decrement
				wordsWrapper.style.width = `${Math.max(currentWidth, 0)}px`
				requestAnimationFrame(step)
			} else {
				setTimeout(() => {
					index = (index + 1) % words.length // Mover al siguiente índice
					prepareNextWord(duration) // Pasa la duración a prepareNextWord
				}, 500)
			}
		}
		requestAnimationFrame(step)
	}

	function prepareNextWord(duration: number) {
		words.forEach((b) => b.classList.remove('is-visible'))
		words[index].classList.add('is-visible')
		expandWidth(duration)
	}
	document.addEventListener('DOMContentLoaded', function () {
		prepareNextWord(500) // Asegúrate que todo está cargado
	})
</script>
